{"ast":null,"code":"var _jsxFileName = \"D:\\\\zet reactjs\\\\swm\\\\src\\\\pages\\\\Home\\\\index.js\";\nimport React, { Component } from 'react';\nimport { Line } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ChartComponent extends Component {\n  constructor() {\n    super(...arguments);\n    this.chartRef = /*#__PURE__*/React.createRef();\n  }\n  componentDidMount() {\n    const myChartRef = this.chartRef.current.getContext('2d');\n    new Chart(myChartRef, {\n      type: 'bar',\n      data: {\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n        datasets: [{\n          label: 'Votes',\n          data: [12, 19, 3, 5, 2, 3],\n          backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"myChart\",\n        ref: this.chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default ChartComponent;","map":{"version":3,"names":["React","Component","Line","jsxDEV","_jsxDEV","ChartComponent","constructor","arguments","chartRef","createRef","componentDidMount","myChartRef","current","getContext","Chart","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","render","children","id","ref","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/zet reactjs/swm/src/pages/Home/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Line } from 'chart.js';\r\n\r\nclass ChartComponent extends Component {\r\n    chartRef = React.createRef();\r\n\r\n    componentDidMount() {\r\n        const myChartRef = this.chartRef.current.getContext('2d');\r\n\r\n        new Chart(myChartRef, {\r\n            type: 'bar',\r\n            data: {\r\n                labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n                datasets: [\r\n                    {\r\n                        label: 'Votes',\r\n                        data: [12, 19, 3, 5, 2, 3],\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.2)',\r\n                            'rgba(54, 162, 235, 0.2)',\r\n                            'rgba(255, 206, 86, 0.2)',\r\n                            'rgba(75, 192, 192, 0.2)',\r\n                            'rgba(153, 102, 255, 0.2)',\r\n                            'rgba(255, 159, 64, 0.2)',\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)',\r\n                        ],\r\n                        borderWidth: 1,\r\n                    },\r\n                ],\r\n            },\r\n            options: {\r\n                scales: {\r\n                    yAxes: [\r\n                        {\r\n                            ticks: {\r\n                                beginAtZero: true,\r\n                            },\r\n                        },\r\n                    ],\r\n                },\r\n            },\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <canvas id=\"myChart\" ref={this.chartRef} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChartComponent;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,IAAI,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,cAAc,SAASJ,SAAS,CAAC;EAAAK,YAAA;IAAA,SAAAC,SAAA;IAAA,KACnCC,QAAQ,gBAAGR,KAAK,CAACS,SAAS,EAAE;EAAA;EAE5BC,iBAAiBA,CAAA,EAAG;IAChB,MAAMC,UAAU,GAAG,IAAI,CAACH,QAAQ,CAACI,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;IAEzD,IAAIC,KAAK,CAACH,UAAU,EAAE;MAClBI,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE;QACFC,MAAM,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC;QAC9DC,QAAQ,EAAE,CACN;UACIC,KAAK,EAAE,OAAO;UACdH,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UAC1BI,eAAe,EAAE,CACb,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,0BAA0B,EAC1B,yBAAyB,CAC5B;UACDC,WAAW,EAAE,CACT,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,EACvB,wBAAwB,EACxB,uBAAuB,CAC1B;UACDC,WAAW,EAAE;QACjB,CAAC;MAET,CAAC;MACDC,OAAO,EAAE;QACLC,MAAM,EAAE;UACJC,KAAK,EAAE,CACH;YACIC,KAAK,EAAE;cACHC,WAAW,EAAE;YACjB;UACJ,CAAC;QAET;MACJ;IACJ,CAAC,CAAC;EACN;EAEAC,MAAMA,CAAA,EAAG;IACL,oBACIxB,OAAA;MAAAyB,QAAA,eACIzB,OAAA;QAAQ0B,EAAE,EAAC,SAAS;QAACC,GAAG,EAAE,IAAI,CAACvB;MAAS;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzC;EAEd;AACJ;AAEA,eAAe9B,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}